// Code generated by MockGen. DO NOT EDIT.
// Source: internal/persistance/store.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	model "web-page-analyzer/model"

	gomock "github.com/golang/mock/gomock"
)

// MockStore is a mock of Store interface.
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore.
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance.
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// CompleteJob mocks base method.
func (m *MockStore) CompleteJob(id string, result model.AnalysisResult, err error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CompleteJob", id, result, err)
}

// CompleteJob indicates an expected call of CompleteJob.
func (mr *MockStoreMockRecorder) CompleteJob(id, result, err interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CompleteJob", reflect.TypeOf((*MockStore)(nil).CompleteJob), id, result, err)
}

// CreateJob mocks base method.
func (m *MockStore) CreateJob(url string) model.Job {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateJob", url)
	ret0, _ := ret[0].(model.Job)
	return ret0
}

// CreateJob indicates an expected call of CreateJob.
func (mr *MockStoreMockRecorder) CreateJob(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateJob", reflect.TypeOf((*MockStore)(nil).CreateJob), url)
}

// GetJob mocks base method.
func (m *MockStore) GetJob(id string) (*model.Job, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJob", id)
	ret0, _ := ret[0].(*model.Job)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetJob indicates an expected call of GetJob.
func (mr *MockStoreMockRecorder) GetJob(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJob", reflect.TypeOf((*MockStore)(nil).GetJob), id)
}

// ListJobs mocks base method.
func (m *MockStore) ListJobs() []*model.Job {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListJobs")
	ret0, _ := ret[0].([]*model.Job)
	return ret0
}

// ListJobs indicates an expected call of ListJobs.
func (mr *MockStoreMockRecorder) ListJobs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListJobs", reflect.TypeOf((*MockStore)(nil).ListJobs))
}
